# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J9Byp1FyzDJu_DOT3IxSTfMD0WTYID2x
"""

import numpy as np

a_arr = [1, 2, 3]
b_arr = [4, 5, 6]

a_arr

a = np.array(a_arr)

a

b = np.array([4, 5, 6])
b

a.itemsize

a.__len__()

a.nbytes

a.ndim

s = a.shape
s

s[1]

s[0]

a_arr = [ 9, 56, 11, 12, 13, 14, 15, 16]

a = np.array(a_arr)
b = np.array(b_arr)

a[1] = 99

a

mtx = np.array(
                    [
                      [1, 2, 3, 4, 5, 6, 7, 8],
                      [9,10,11,12,13,14,15,16],
                      [9,10,11,12,13,14,15,16]
                    ]
              )

print(mtx)

mtx.ndim



mtx.itemsize

mtx.nbytes

lst = [1.2, 13. ,22.01]
lst

a_f = np.array(lst)

a_f.nbytes

a_f.itemsize

b = np.array([4, 5, 6])
b

b.dtype

b.itemsize

b.nbytes

b.dtype

c = np.array([4, 5, 6], dtype='uint8')
c

c.dtype

c.itemsize

c.nbytes

print("b:", b)
print("c:", c)

print("b nbytes:", b.nbytes)
print("c nbytes:", c.nbytes)

a_arr

np.max(a_arr)

v1 = np.array(a_arr)
v1.nbytes

v2 = np.array(a_arr, dtype="int8")
v2.nbytes

mtx = np.array(
                    [
                      [1, 2, 3, 4, 5, 6, 7 , 8],
                      [9,10,11,12,13,14,15 ,16],
                      [9,10,11,12,13,14,45,16]
                    ],
                    dtype="int8"
              )

mtx.dtype

mtx.nbytes

mtx.max()

mtx.min()

mtx.mean()

mtx.itemset(0, 99)

mtx

mtx.itemset(8, 120)

mtx.itemset(3, 100)

mtx

mtx.shape

mtx = np.array(     [
                      [
                        [1, 2, 3, 4, 5, 6, 7 , 8],
                        [9,10,11,12,13,14,15 ,16],
                        [9,10,11,12,13,14,45,16]
                      ],
                      [
                        [1, 2, 3, 4, 5, 6, 7 , 8],
                        [9,10,11,12,13,14,15 ,16],
                        [9,10,11,12,13,14,45,16]
                      ]
                    ],
                    dtype="int8"
              )

mtx.shape

mtx = np.array(
                    [
                      [1, 2, 3, 4, 5, 6, 7 , 8],
                      [9,10,11,12,13,14,15 ,16],
                      [9,10,11,12,13,14,45,16]
                    ],
                    dtype="int8"
              )

mtx[0, 0]

mtx[2, 4]

mtx[1, :]

mtx[:]

mtx[1 : ]

mtx

mtx[:, 2]

mtx[0, 1:6] # elm da llinha 0 da pos 1 a 5

mtx[0, 1:6 : 2]

mtx[:, 4]

mtx[:, 4] = [0, 0, 0]

mtx

mtx[:, 4] = [0, 0, 0, 5] # a list a atribuir tem de ter as mesmas dim que o destino

mtx[0, 1:6 : 2]

mtx[0, 1:6 : 2] = [33, 33, 33]

mtx

b = np.array([4, 5, 6])
b

b * 2

b - 10

b

a_arr = [1,2,3]
a = np.array(a_arr)
a

a + b

print(a)
print(b)
a * b

arr = np.array([[17, 18, 19, 20, 21, 22, 23, 24],
                [25, 26, 27, 28, 29, 30, 31, 32],
                [33, 34, 35, 36, 37, 38, 39, 40],
                [41, 42, 43, 44, 45, 46, 47, 48],
                [49, 50, 51, 52, 53, 54, 55, 56],
                [57, 58, 59, 60, 61, 62, 63, 64]])

arr

# obter [34, 35, 36, 37, 38, 39, 40] # linha 3 da col  1 ate ao dim

# obter [18, 26, 34, 42, 50, 58] #col 2

#obter 26, 27, 29, 31 # linha 2, pos 1, 2, 4 6

"""obter:

26, 27, 28, 29, 30, 31
34, 35, 36, 37, 38, 39
42, 43, 44, 45, 46, 47
50, 51, 52, 53, 54, 55

mat central
"""









